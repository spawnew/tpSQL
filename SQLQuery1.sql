/*    A – Básicas -*/

/* EJERCICIO1 */
Select TITULO,AUTOR ,TIPO,PRECIO_ORI
from libro
WHERE TIPO ='no'AND PRECIO_ORI>21 ;
/* EJERCICIO2*/
SELECT NRO_LIBRO,EDICION,TIPO,PRECIO_ORI
FROM libro
where tipo='no' OR(PRECIO_ORI>21 AND EDICION > 1985);
/* EJERCICIO3*/
SELECT AUTOR,EDICION
FROM LIBRO
WHERE AUTOR LIKE'L%'
/* EJERCICIO4*/
SELECT AUTOR,EDICION
FROM LIBRO
WHERE AUTOR NOT LIKE 'L%';
/* EJERCICIO5*/
SELECT AUTOR,PRECIO_ORI,EDICION
FROM libro
WHERE AUTOR  LIKE '%RR%'
/* EJERCICIO6 */
SELECT TITULO ,EDICION,PRECIO_ORI
FROM LIBRO
WHERE NOT (PRECIO_ORI>12 AND PRECIO_ORI<25)
/* EJERCICIO7  */
select DISTINCT EDICION,TIPO FROM LIBRO
ORDER BY EDICION ASC
/* EJERCICIO8  */

SELECT NRO_LIBRO,EDICION,TIPO,PRECIO_ORI,PRECIO_ACT,(PRECIO_ORI-PRECIO_ACT)AS DIFERENCIA
FROM LIBRO
ORDER BY TIPO ,DIFERENCIA ASC

/* EJERCICIO9 */
SELECT NRO_LIBRO,EDICION,TIPO,PRECIO_ORI,PRECIO_ACT,(PRECIO_ORI-PRECIO_ACT)AS DIFERENCIA
FROM LIBRO
ORDER BY DIFERENCIA
/* EJERCICIO10*/
SELECT NRO_LIBRO,EDICION,TIPO,PRECIO_ORI
FROM LIBRO
WHERE EDICION>1985 AND (TIPO='no' OR PRECIO_ORI>21)
/* EJERCICIO11*/

SELECT TITULO,AUTOR
FROM LIBRO
WHERE (TIPO='no' OR PRECIO_ORI>21)
/* EJERCICIO12*/

SELECT TITULO,PRECIO_ORI,EDICION
FROM LIBRO
WHERE EDICION=1948 OR EDICION =1978 OR EDICION=1985

/* EJERCICIO13*/
SELECT TITULO,EDICION
FROM LIBRO 
WHERE PRECIO_ORI>=12 AND PRECIO_ORI<=25
/* EJERCICIO14
*/
SELECT TITULO ,PRECIO_ORI EDICION 
FROM LIBRO
WHERE  TITULO LIKE '%R%S%'
/* EJERCICIO15
*/
SELECT TITULO ,PRECIO_ORI EDICION 
FROM LIBRO
WHERE  TITULO LIKE '_A%'
/* EJERCICIO16
*/
SELECT TITULO , EDICION 
FROM LIBRO
WHERE  TIPO='NO'
ORDER BY EDICION ASC,
/* EJERCICIO17
*/
SELECT NRO_LIBRO,EDICION,TIPO FROM LIBRO
WHERE PRECIO_ORI>20
ORDER BY   EDICION DESC,NRO_LIBRO ASC
/* EJERCICIO18
*/
SELECT NRO_LIBRO,EDICION,TIPO,PRECIO_ORI,PRECIO_ACT,(PRECIO_ACT-PRECIO_ORI) AS DIFERENCIA

FROM LIBRO
WHERE (PRECIO_ACT-PRECIO_ORI)>10


/* EJERCICIO19
*/

SELECT NRO_LIBRO,EDICION,TIPO,PRECIO_ORI,PRECIO_ACT,(PRECIO_ACT-PRECIO_ORI) AS DIFERENCIA

FROM LIBRO
WHERE (PRECIO_ACT-PRECIO_ORI)>10
ORDER BY DIFERENCIA DESC

/*   B - Funciones de Agregación, Having -*/
/* EJERCICIO1
*/
Select SUM(PRECIO_ORI)as PRECIOSUMADO,AVG(PRECIO_ORI)AS PROMEDIO,MAX(PRECIO_ACT)AS PRECIOMAX,MIN(PRECIO_ACT)AS PRECIOMIN
FROM LIBRO
WHERE EDICION>1970
/* EJERCICIO2
*/
SELECT SUM(PRECIO_ORI+PRECIO_ACT)AS PRECIO_TOTAL,AVG(PRECIO_ORI+PRECIO_ACT) AS PROMEDIO,MIN(PRECIO_ACT-PRECIO_ORI)AS MINIMO,MAX(PRECIO_ACT-PRECIO_ORI)AS MAXIMO
FROM LIBRO
WHERE EDICION>1970
/* EJERCICIO3
*/
SELECT COUNT (NRO_LIBRO)AS CANTIDAD_DE_LIBROS,MAX(PRECIO_ORI)AS MAXIMO,MIN(PRECIO_ORI)AS MINIMO FROM LIBRO
WHERE PRECIO_ORI>45
/* EJERCICIO4
*/
SELECT TIPO,SUM(PRECIO_ORI)AS TOTAL_PRECIO,AVG(PRECIO_ACT)AS PROMEDIO_PRECIOACT
FROM LIBRO
WHERE EDICION <>1946 
GROUP BY TIPO
HAVING SUM(PRECIO_ORI) > 40
ORDER BY TIPO;
/* EJERCICIO5
*/
SELECT TIPO,AVG(PRECIO_ORI)AS PROMEDIO_TOTAL
FROM LIBRO

GROUP BY TIPO
HAVING AVG(PRECIO_ORI)>
(SELECT AVG(PRECIO_ORI) FROM LIBRO)
/* EJERCICIO6
*/
SELECT TIPO ,AVG(PRECIO_ORI)AS PROMEDIO_ORIGINAL,AVG (PRECIO_ACT) AS PROMEDIO_ACTUAL
FROM LIBRO
WHERE(EDICION >= 1946) AND (EDICION <= 1975)
GROUP BY TIPO
/* EJERCICIO7
*/
SELECT TIPO ,SUM(PRECIO_ORI)AS SUMA_ORIGINAL,SUM(PRECIO_ACT) AS SUMA_ACTUAL
FROM LIBRO
WHERE(EDICION <> 1946) 
GROUP BY TIPO
ORDER BY AVG(PRECIO_ACT) ASC
/* EJERCICIO8
*/
SELECT TIPO ,SUM(PRECIO_ORI)AS SUMA_ORIGINAL,AVG(PRECIO_ACT) AS PROMEDIO_ACTUAL
FROM LIBRO
WHERE(EDICION >= 1946) AND (EDICION <= 1975)
GROUP BY TIPO

SELECT MAX(SALARIO)AS MAXIMO_SALARIO, TRABAJO FROM LECTOR
GROUP BY TRABAJO

SELECT AVG(SALARIO) AS PROMEDIO_SALARIO, TRABAJO
FROM LECTOR
WHERE DIRECCION LIKE '%Capital%'
GROUP BY TRABAJO;
/* c Uso de Operadores Especiales (ALL, ANY) , SubQuerys -*/
/* EJERCICIO1
*/
SELECT DISTINCT LEFT(NOMBRE, 5) AS PRIMEROS_5
FROM LECTOR
/* EJERCICIO2
*/
SELECT NOMBRE, DIRECCION
FROM LECTOR
WHERE NRO_LECTOR IN (
    SELECT DISTINCT NRO_LECTOR
    FROM PRESTAMO
);
/* EJERCICIO3
*/
SELECT NRO_LIBRO,TITULO,PRECIO_ACT FROM LIBRO
WHERE PRECIO_ORI IN(
SELECT MAX(PRECIO_ORI) FROM LIBRO)
/* EJERCICIO4
*/
SELECT NRO_LIBRO,TITULO,PRECIO_ORI FROM LIBRO
WHERE PRECIO_ORI> ALL(
SELECT AVG(PRECIO_ACT) FROM LIBRO)
/* EJERCICIO5
*/
SELECT NRO_LIBRO, TITULO, PRECIO_ORI
FROM LIBRO
WHERE PRECIO_ORI > ALL (
    SELECT PRECIO_ORI
    FROM LIBRO
    WHERE TIPO = 'no'
);
SELECT NRO_LIBRO, TITULO, PRECIO_ORI
FROM LIBRO
WHERE PRECIO_ORI > ANY (
    SELECT PRECIO_ORI
    FROM LIBRO
    WHERE TIPO = 'no'
);
/*
D - Consultas en varias tablas – uso de join (inner join – left join – right join)*/SELECT F_PREST,F_DEVOL,TITULO FROM PRESTAMOJOIN LIBROON LIBRO.NRO_LIBRO=PRESTAMO.NRO_LIBRO/* EJERCICIO2
*/
SELECT LIBRO.NRO_LIBRO AS NUMERO_LIBRO,TITULO, F_PREST,F_DEVOL FROM PRESTAMOJOIN LIBROON LIBRO.NRO_LIBRO=PRESTAMO.NRO_LIBRO/* EJERCICIO3
*/
SELECT L.NRO_LECTOR,L.NOMBRE,COUNT(*) AS CANTIDAD_PRESTAMOS
FROM LECTOR L
JOIN PRESTAMO P ON L.NRO_LECTOR = P.NRO_LECTOR
GROUP BY L.NRO_LECTOR, L.NOMBRE;
/* EJERCICIO4

*/
SELECT L.NRO_LIBRO,L.TITULO,C.NRO_COPIA,COUNT(P.NRO_LIBRO) AS CANTIDAD_PRESTAMOS
FROM LIBRO L
JOIN COPIAS C ON L.NRO_LIBRO = C.NRO_LIBRO
LEFT JOIN PRESTAMO P ON C.NRO_LIBRO = P.NRO_LIBRO AND C.NRO_COPIA = P.NRO_COPIA
GROUP BY L.NRO_LIBRO, L.TITULO, C.NRO_COPIA;
/* EJERCICIO5
*/
SELECT L.NRO_LIBRO, L.TITULO,  COUNT(*) AS CANTIDAD_PRESTAMOS
FROM LIBRO L
JOIN PRESTAMO P ON L.NRO_LIBRO = P.NRO_LIBRO
WHERE P.F_PREST >= '2012-01-01'
GROUP BY L.NRO_LIBRO, L.TITULO

/* EJERCICIO6
*/
SELECT L.NRO_LIBRO, L.TITULO, C.NRO_COPIA, COUNT(P.NRO_LIBRO) AS CANTIDAD_PRESTAMOS
FROM LIBRO L
JOIN COPIAS C ON L.NRO_LIBRO = C.NRO_LIBRO
LEFT JOIN PRESTAMO P ON C.NRO_LIBRO = P.NRO_LIBRO AND C.NRO_COPIA = P.NRO_COPIA
GROUP BY L.NRO_LIBRO, L.TITULO, C.NRO_COPIA
HAVING COUNT(P.NRO_LIBRO) > 1;
/* EJERCICIO7
*/
                     
SELECT L.NRO_LIBRO, L.TITULO, C.NRO_COPIA,P.F_PREST
FROM LIBRO L
JOIN COPIAS C ON L.NRO_LIBRO = C.NRO_LIBRO
LEFT JOIN PRESTAMO P ON C.NRO_LIBRO = P.NRO_LIBRO AND C.NRO_COPIA = P.NRO_COPIA
/* EJERCICIO8
*/
SELECT LE.NRO_LECTOR,LE.NOMBRE,LI.NRO_LIBRO,LI.TITULO,TL.DESCTIPO AS DESCRIPCION_TIPO,PR.F_PREST
FROM PRESTAMO PR
JOIN LECTOR LE ON PR.NRO_LECTOR = LE.NRO_LECTOR
JOIN LIBRO LI ON PR.NRO_LIBRO = LI.NRO_LIBRO
JOIN TIPOLIBRO TL ON LI.TIPO = TL.TIPO
WHERE 
  PR.F_DEVOL IS NOT NULL
  AND TL.DESCTIPO IN ('Novela', 'Cuentos')
/* EJERCICIO9
*/
SELECT LI.TITULO, LE.NOMBRE
FROM PRESTAMO PR
JOIN LIBRO LI ON PR.NRO_LIBRO = LI.NRO_LIBRO
JOIN LECTOR LE ON PR.NRO_LECTOR = LE.NRO_LECTOR
WHERE PR.F_DEVOL IS NULL;
/* EJERCICI10
*/
SELECT LE.NRO_LECTOR, LE.NOMBRE, PR.F_PREST
FROM PRESTAMO PR
JOIN LECTOR LE ON PR.NRO_LECTOR = LE.NRO_LECTOR
WHERE PR.F_DEVOL IS NULL;
/* EJERCICIO11
*/
SELECT LE.NRO_LECTOR, LE.NOMBRE, LI.NRO_LIBRO, LI.TITULO, PR.F_PREST
FROM PRESTAMO PR
JOIN LECTOR LE ON PR.NRO_LECTOR = LE.NRO_LECTOR
JOIN LIBRO LI ON PR.NRO_LIBRO = LI.NRO_LIBRO
WHERE PR.F_DEVOL IS NOT NULL;
/* EJERCICIO12
*/
SELECT LE.NRO_LECTOR, LE.NOMBRE, LI.NRO_LIBRO, LI.TITULO, PR.F_PREST
FROM PRESTAMO PR
JOIN LECTOR LE ON PR.NRO_LECTOR = LE.NRO_LECTOR
JOIN LIBRO LI ON PR.NRO_LIBRO = LI.NRO_LIBRO
JOIN TIPOLIBRO TL ON LI.TIPO = TL.TIPO
WHERE PR.F_DEVOL IS NOT NULL AND TL.DESCTIPO IN ('Novela', 'Cuentos');
/* EJERCICIO13
*/
SELECT LE.NRO_LECTOR, LE.NOMBRE, PR.F_PREST
FROM LECTOR LE
LEFT JOIN PRESTAMO PR ON LE.NRO_LECTOR = PR.NRO_LECTOR;
/* E – Insert – Update - Delete
*/
/*EJERCICIO1
*/

INSERT INTO LIBRO (NRO_LIBRO, TITULO, AUTOR, TIPO, PRECIO_ORI, PRECIO_ACT, EDICION, ESTADO)
VALUES (999, 'SEÑOR DE LOS ANILLOS ', 'FRODO', 'NV', 45.50, 50.00, 1950, 'A');
INSERT INTO COPIAS (NRO_LIBRO, NRO_COPIA, ESTADO)
VALUES (999, 1, 'A'),(999, 2, 'A');
/*EJERCICIO2
*/
UPDATE LIBRO
SET PRECIO_ACT = 35.35
WHERE TITULO = 'LAS MIL Y UNA NOCHES';
/*EJERCICIO3
*/
DELETE FROM LECTOR
WHERE SALARIO < 1000;